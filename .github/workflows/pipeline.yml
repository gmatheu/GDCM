name: Build

on:
  push:
    branches:
      - "*_build"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.23.3

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: 3
          CIBW_BEFORE_BUILD: "pip install scikit-build && python setup.py clean"
          CIBW_BEFORE_ALL_LINUX: "yum install -y swig cmake"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl


#name: Build
#
#on:
#  push:
#    branches:
#      - "*_build"
#
#
#jobs:
#  build_wheels:
#    name: Build wheels on ${{ matrix.os }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [macos-latest]
#    env:
#          CIBW_BUILD_VERBOSITY: 3
#          CIBW_SKIP: ""
#          CIBW_BEFORE_BUILD: "pip install scikit-build"
#          CIBW_BEFORE_ALL_LINUX: "yum install -y swig cmake"
#          CIBW_BEFORE_ALL_WINDOWS: "choco install visualstudio2017buildtools -f -y && choco install cmake -f -y --installargs 'ADD_CMAKE_TO_PATH=System' && choco install ninja -f -y"
#    steps:
#      - uses: actions/checkout@v4
#
#      - uses: actions/setup-python@v5
#        name: Install Python
#        with:
#          python-version: '3.11'
#
#      - name: Install cibuildwheel
#        run: |
#          python3 -m pip install cibuildwheel==2.23.3 scikit-build
#
#      - name: Build wheels
#        run: |
#          python -m cibuildwheel --output-dir wheelhouse
#
#      - name: Source dist
#        run: |
#          python setup.py sdist
#
#      - uses: actions/upload-artifact@v4
#        with:
#          name: wheels_${{ matrix.os }}
#          path: ./wheelhouse
#          if-no-files-found: error
#
#      - uses: actions/upload-artifact@v4
#        with:
#          name: dist_${{ matrix.os }}
#          path: ./dist
#
#  release:
#    name: Release
#    runs-on: ubuntu-18.04
#    needs: [build_wheels]
#    steps:
#      - name: Download all artifacts
#        uses: actions/download-artifact@v2
#      - name: Display structure of downloaded files
#        run: ls -R
#        working-directory: .
#      - name: Inject slug/short variables
#        uses: rlespinasse/github-slug-action@2.0.0
#      - uses: marvinpinto/action-automatic-releases@v1.0.0
#        with:
#          repo_token: "${{ secrets.GITHUB_TOKEN }}"
#          automatic_release_tag: "${{ env.GITHUB_REF_SLUG }}"
#          prerelease: true
#          title: "Development Build: ${{ env.GITHUB_REF_SLUG }}"
#          files: |
#            ./wheels_*/*.whl
#            ./dist_ubuntu-18.04/*.tar.gz
